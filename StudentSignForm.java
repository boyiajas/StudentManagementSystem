/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package finalprojrct;

import com.fazecast.jSerialComm.SerialPort;
import java.io.InputStream;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Lordwiz
 */
public class StudentSignForm extends javax.swing.JFrame {

     Connection con = null;
    PreparedStatement pst1, pst2 = null;
    Statement st = null;
    ResultSet rs = null;
    String url = "jdbc:mysql://localhost:3306/studentmanagement_db";
    String user = "root";
    String pass = "";
    int comPortNumber = 0;
    Thread t2 = null;
    int doneEnroll = 0;
    int doneVerify = 0;
    int returnVerifyId = 0;
    String input_todo = null;
    int LectureNo = 0;
    
    public StudentSignForm(String selectedModule, int LectureNo) {
       
        initComponents();
         this.ModuleName.setText(selectedModule);
         this.LectureNoDisplay.setText(String.valueOf(LectureNo + 1) );
         this.LectureNo = LectureNo + 1;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        ModuleName = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        LectureNoDisplay = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("VERIFY FINGER");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Module Name: ");

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 135, Short.MAX_VALUE)
        );

        jLabel1.setText("FirstName");

        jLabel3.setText("lastName");

        jLabel4.setText("ID NO");

        jLabel8.setText("Lecture Number: ");

        LectureNoDisplay.setText("jLabel9");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel8))
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(LectureNoDisplay))
                                    .addComponent(ModuleName, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 175, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(92, 92, 92))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(48, 48, 48)
                                .addComponent(jLabel6))
                            .addComponent(jLabel5))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ModuleName, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(LectureNoDisplay))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel7))))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //this is the button to verify 
           //here we get the serial communication port id number
        comPortNumber = Integer.parseInt(JOptionPane.showInputDialog(null, "Please Input the Port Number"));
        final SerialPort comPort = SerialPort.getCommPort("COM"+comPortNumber);
        //here we a trying to initializing the port
        comPort.openPort();
       
        if(comPort.isOpen() == true) {
            
            Thread t5 = new Thread(){
                @Override
                public void run(){
                    
                    jPanel1.setBackground(java.awt.Color.white);
                        System.out.println("Port opened successfully: " + comPort.openPort());
                        comPort.setComPortParameters(9600,8,1,SerialPort.NO_PARITY);
                        comPort.setComPortTimeouts(SerialPort.TIMEOUT_READ_BLOCKING, 4000, 0);

                          try{

                              
                                  //method to read message from the serial comm port
                                  readMessageFromArduino(comPort); 

                                  input_todo = "2";
                                  char todo = input_todo.toCharArray()[0];
                                  //method to send message to the arduino using the serial comm port
                                  sendCharacterMessageToArduino(todo, comPort);

                                   //if input option is '1' do this
                                  if(todo == '2'){
                                      //method to read message from the serial comm port
                                       readMessageFromArduino(comPort); 

                                      //input_todo = input.next();
                                      //here we are going to connect to the database and get the student Id
//                                      input_todo = studentID_label.getText(); ///this is where we get the student id which will be used to enroll the finger print

                                      todo = input_todo.toCharArray()[0];
                                      //method to send message to the arduino using the serial comm port
                                      sendCharacterMessageToArduino(todo, comPort);

                                       //displaying recieved message out
                                       //readMessageFromArduino(comPort);

                                        int count = 0;
                                          //method to read message from the serial comm port
                                          while(true){
                                              //System.out.println(count++);
                                             t2 = new Thread(){

                                                  @Override
                                                  public void run(){
                                                      try {
              
                                                          readMessageFromArduino(comPort);
                                                          
                                                      } catch (Exception ex) {
                                                          System.out.println("Unable to read from the communication Port");
                                                      }
                                                  }
                                              };
                                              t2.start();
                                              //readMessageFromArduino(comPort);
                                              Thread.sleep(1000);
                                               //t2.stop();
                                              if(doneVerify == 1){
                                                 // System.out.println("Here we need to break");
                                                  break;
                                              }
                                          }

                                  }
                                  
                                  //here we want to connect to the database and search for student with the verify id
                                   con = DriverManager.getConnection(url,user,pass);
                                    Class.forName("com.mysql.jdbc.Driver");
                                    //here we are selecting the student id
                                    Statement st = con.createStatement();
                                     //get connection

                                   String sql = "select * from  student_tb where StudentID =?";
                                   PreparedStatement pst = con.prepareStatement(sql);
                                   pst.setInt(1,returnVerifyId);
                                   ResultSet rs = pst.executeQuery();

                                   if(rs.next()){
                                       String setid = rs.getString("ID_NO");
                                       jLabel7.setText(setid);
                                       jLabel6.setText(rs.getString("FirstName"));
                                       jLabel5.setText(rs.getString("LastName"));
                                      
                                       //studentID_label.setText(rs.getString("StudentID"));
                                       //here we need to get the module id
                                         int ModuleID = Integer.parseInt(stringSeperator(ModuleName.getText())[0]);  // System.out.println(ModuleID);
                                       //here we want to search if the student if registered for this module
                                        String query2 = "Select * from module_reg_tb where StudentID = '"+returnVerifyId+"' and ModuleID = '"+ModuleID+"' and Status = 'A' ";
                                        ResultSet rs2 = st.executeQuery(query2);
                                        
                                       if(rs2.next()){
                                           //before inserting it must check if the student as signed already
                                           String query3 = "Select * from class_register_tb where ModuleID = '"+ModuleID+"' and StudentID = '"+returnVerifyId+"' and LectureNo = '"+LectureNo+"' ";
                                            ResultSet rs3 = st.executeQuery(query3);
                                           if(rs3.next()){
                                                jPanel1.setBackground(java.awt.Color.GREEN);
                                                 Thread.sleep(3000);
                                                jPanel1.setBackground(java.awt.Color.WHITE);
                                           }else{
                                           //here we need to insert into  the class register table
                                            String query4 = "INSERT into class_register_tb (`ModuleID`,`LectureNo`,`StudentID`) values"
                                             + " ('"+ModuleID+"','"+LectureNo+"','"+returnVerifyId+"')";
                                              st.executeUpdate(query4);
                                            //the student as successful sign for the module attendance
                                             jPanel1.setBackground(java.awt.Color.GREEN);
                                             Thread.sleep(3000);
                                              jPanel1.setBackground(java.awt.Color.WHITE);
                                              comPort.closePort();
                                           }
                                       }else{
                                           //the student is not registered for the module
                                           jPanel1.setBackground(java.awt.Color.RED);
                                            Thread.sleep(5000);
                                             jPanel1.setBackground(java.awt.Color.WHITE);
                                             comPort.closePort();
                                             jLabel7.setText("");
                                            jLabel6.setText("");
                                            jLabel5.setText("");
                                       }
                                    
                                  }else{
                                       //here the student is not registered on the database
                                      jPanel1.setBackground(java.awt.Color.RED);
                                       Thread.sleep(3000);
                                        jPanel1.setBackground(java.awt.Color.WHITE);
                                       comPort.closePort();
                                  }
                              
                          }catch(Exception e){
                               e.printStackTrace();
                          }

            
                    }

                };
                t5.start();
                comPort.closePort();
                
            }else {
       //Update the status/console if the Arduino hasn't been connected.
        JOptionPane.showMessageDialog(null,"SORRY! FINGER PRINT READER IS NOT CONNECTED ON THIS PORT!");
        jPanel1.setBackground(java.awt.Color.RED);
        }
       
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentSignForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentSignForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentSignForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentSignForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentSignForm("peter", 0).setVisible(true);
            }
        });
    }
    
      public String readMessageFromArduino(SerialPort comPort) throws Exception {
         //displaying recieved message out
          
        while (true)
        {
           InputStream dataIn = comPort.getInputStream();

           while (comPort.bytesAvailable() == 0)
           Thread.sleep(100);

           byte[] readBuffer = new byte[1024];
           //int numRead = comPort.readBytes(readBuffer, readBuffer.length);
           //System.out.println("Read " + numRead + " bytes." + readBuffer.toString());
           String message = "";
           int len = 0;
           try{
                len = dataIn.read(readBuffer);
           }catch(Exception e){
               System.out.println("Unable to read from the port");
               break;
           }
           if (len > 0) {
               
               
               message = new String(readBuffer);
               System.out.println(message);
               if(searchStr(message,"sensor_notfound") == true){
                   JOptionPane.showMessageDialog(null, "Error - Finger Print Reader Not Connected");
               }else if(searchStr(message,"Done") == true) {
                   //JOptionPane.showMessageDialog(null, "Done");
                   Thread t3  = new Thread(){
                       
                    @Override
                        public void run(){
                            try {

                                jPanel1.setBackground(java.awt.Color.GREEN);
                                
                            } catch (Exception ex) {
                                Logger.getLogger(student_registration.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                    };
                    t3.start();
                    
                    //doneVerify = 1;
                    //System.out.println(doneEnroll + " its done now");
                   //System.out.println("...........Program should be done now............");
                    break;//System.exit(0); //if match found exit
               }else if(searchStr(message,"Failed") == true){
                    this.jPanel1.setBackground(java.awt.Color.RED);
                   System.exit(0); //if match found exit
               }else if(input_todo == "2"){
                  
                    try{
                        returnVerifyId =  Integer.parseInt(message.trim().toString());
                       doneVerify = 1;
                       System.out.println("We getting the id only "+returnVerifyId);
                       break;
                    }catch(Exception e){
                        System.out.println(e);
                        doneVerify = 1;
                        returnVerifyId = 0;
                        break;
                    }
               }
               break;
           }
           //comPort.addDataListener((SerialPortDataListener) this);
          
        }
        return null;
    }
     
    public void sendCharacterMessageToArduino(char cMsg, SerialPort comPort) throws Exception {
        Thread.sleep(100);
        comPort.getOutputStream();
        PrintWriter output = new PrintWriter(comPort.getOutputStream());  
        //char todo = '2';
        output.write(cMsg);
        output.flush();
    }
    
    public boolean searchStr(String search, String what) {
        if(!search.replaceAll(what,"_").equals(search)) {
            return true;
        }
        return false;
    }
    
     private String[] stringSeperator(String para){
        String buffer = "";
        String stringArray[] = new String[para.length()];
        int slitCount = 0;
        for(int i = 0; i < para.length(); i++){
            if(para.charAt(i) != '_'){
                buffer += para.charAt(i);
            }else{
                stringArray[slitCount++] = buffer;
            }
            //System.out.println(stringArray[0]);
        }
        
        return stringArray;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LectureNoDisplay;
    private javax.swing.JLabel ModuleName;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables


}
